name: Go Release

on:
  push:
    tags:
      - 'v*'  # 只有推送 `vX.X.X` 版本的 tag 时才会触发 Release

jobs:
  build:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    # 仅支持 Linux 的两个架构
    strategy:
      matrix:
        arch: [amd64, arm64]  

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
          cache: true
          cache-dependency-path: go.sum

      - name: Define File Name
        run: |
          APP_NAME="momentdb"
          ARCH="${{ matrix.arch }}"
          OUTPUT_NAME="${APP_NAME}-linux-${ARCH}"
          echo "OUTPUT_NAME=$OUTPUT_NAME" >> $GITHUB_ENV

      - name: Build Binary
        run: |
          OUTPUT="dist/${{ env.OUTPUT_NAME }}"
          mkdir -p dist
          env GOOS=linux GOARCH=${{ matrix.arch }} go build -o "$OUTPUT" ./momentdb.go

      - name: Compress Binary
        run: |
          cd dist
          zip "${{ env.OUTPUT_NAME }}.zip" "${{ env.OUTPUT_NAME }}"*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: dist/${{ env.OUTPUT_NAME }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.zip
          token: ${{ secrets.GH_PAT }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          # 自动使用 CHANGELOG.md 作为 Release 说明
          body_path: CHANGELOG.md 
          draft: false
          prerelease: false
